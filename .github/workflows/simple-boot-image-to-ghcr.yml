on:
  workflow_call:
    inputs:
      image-repo:
        type: string
        required: true
      image-platforms:
        type: string
        default: "linux/amd64,linux/arm64"
        description: "Docker buildx platforms comma-separated, such as linux/amd64,linux/arm64"
      image-push:
        type: boolean
        default: true
      extra-gradle-tasks:
        type: string
        description: "Such as test"
      include-node-js:
        description: If enabled, NodeJS will be installed for use with the Gradle build
        type: boolean
        default: false
      nodejs-version:
        type: string
        default: "16"
      npm-cache-dependency-path:
        description: Refer to https://github.com/actions/setup-node#caching-global-packages-data
        type: string
        default: 'src/main/ui/package-lock.json'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: actions/setup-node@v3
        if: inputs.include-nodejs
        with:
          node-version: ${{ inputs.nodejs-version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.npm-cache-dependency-path }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Login to image registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Gradle build and push
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            -PimageRepo=${{ inputs.image-repo }}
            -PimagePlatforms=${{ inputs.image-platforms }}
            -PimagePush=${{ inputs.image-push }} 
            -PimageCacheFrom=type=gha
            -PimageCacheTo=type=gha,mode=max
            ${{ inputs.extra-gradle-tasks }}
            buildSimpleBootImage
