on:
  workflow_call:
    inputs:
      image-repo:
        type: string
        required: true
      image-platforms:
        type: string
        default: "linux/amd64,linux/arm64"
        description: "Docker buildx platforms comma-separated, such as linux/amd64,linux/arm64"
      image-push:
        type: boolean
        default: true
      extra-gradle-tasks:
        type: string
        description: "Such as test"
      include-nodejs:
        description: If enabled, NodeJS will be installed for use with the Gradle build
        type: boolean
        default: false
      nodejs-version:
        type: string
        default: 'lts/hydrogen'
      npm-cache-dependency-path:
        description: Refer to https://github.com/actions/setup-node#caching-global-packages-data
        type: string
        default: 'src/main/ui/package-lock.json'
      java-version:
        type: string
        default: "17"
      java-distribution:
        type: string
        default: "temurin"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - uses: actions/setup-node@v4.0.3
        if: inputs.include-nodejs
        with:
          node-version: ${{ inputs.nodejs-version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.npm-cache-dependency-path }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Login to image registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run gradle build
        run: >
          ./gradlew
          -PimageRepo=${{ inputs.image-repo }}
          -PimagePlatforms=${{ inputs.image-platforms }}
          -PimagePush=${{ inputs.image-push }} 
          -PimageCacheFrom=type=gha
          -PimageCacheTo=type=gha,mode=max
          ${{ inputs.extra-gradle-tasks }}
          buildSimpleBootImage
