on:
  workflow_call:
    inputs:
      arguments:
        type: string
        default: "build"
        required: false
      scoop-bucket-repo:
        type: string
        required: false
      homebrew-tap-repo:
        type: string
        required: false
      include-test-report:
        type: boolean
        default: false
      include-nodejs:
        description: If enabled, NodeJS will be installed for use with the Gradle build
        type: boolean
        default: false
      nodejs-version:
        type: string
        default: 'lts/hydrogen'
      npm-cache-dependency-path:
        description: Refer to https://github.com/actions/setup-node#caching-global-packages-data
        type: string
        default: 'src/main/ui/package-lock.json'
      java-version:
        type: string
        default: "17"
      java-distribution:
        type: string
        default: "temurin"
    secrets:
      GITHUB_PUBLISH_TOKEN:
        required: false

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Setup Java JDK
        uses: actions/setup-java@v4.1.0
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - uses: actions/setup-node@v4.0.2
        if: inputs.include-nodejs
        with:
          node-version: ${{ inputs.nodejs-version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.npm-cache-dependency-path }}

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v3.1.0

      - name: Run gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_PUBLISH_TOKEN: ${{ secrets.GITHUB_PUBLISH_TOKEN }}
          SCOOP_BUCKET_REPO: ${{ inputs.scoop-bucket-repo }}
          HOMEBREW_TAP_REPO: ${{ inputs.homebrew-tap-repo }}
        run: ./gradlew ${{ inputs.arguments }}

      - name: Test Report
        uses: dorny/test-reporter@v1.8.0
        if: github.actor == github.repository_owner && inputs.include-test-report && ( success() || failure() )    # run this step even if previous step failed
        with:
          name: test results
          path: build/test-results/test/*.xml
          reporter: java-junit
